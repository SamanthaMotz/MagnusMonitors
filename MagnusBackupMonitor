#I'm not sure if anyone is using this. Will update if requested. E-mail requests to sam@motztech.com

#Version 1.0 Beta
#Script created by Samantha Motz - Motz Technologies LLC- Sam@motztech.com. Untested! Use at your own risk. 
#This script will check for errors first and then warnings. If no entries are found at all, it reports that as well.
#This script assumes Magnus is installed on your system drive. If it's not, you need to edit the $DriveLetter variable.
#In addition to running response code, this script creates a logs subdirectory in your install folder and created logs within. 

#How far back to check logs, I recommend no more than 2 days. More can catch old errors that are resolved. 

$Days = 2


#Enter your magnus software name here. No spaces at the start or end
$MagnusName = "YOUR BACKUP NAME HERE"


#end of custom variables

$DriveLetter = (Get-WmiObject Win32_OperatingSystem).SystemDrive

#Credit to Molly Kelly for WriteLog Function
function WriteWarnLog
{
    Param ([string]$LogString)
    $LogFile = "$DriveLetter\Program files\$MagnusName\Logs\BackupWarningLog.log"
    $DateTime = "[{0:MM/dd/yy} {0:HH:mm:ss}]" -f (Get-Date)
    $LogMessage = "$Datetime $LogString"
    Add-content $LogFile -value $LogMessage 
}

function WriteErrorLog
{
    Param ([string]$LogString)
    $LogFile = "$DriveLetter\Program files\$MagnusName\Logs\BackupErrorLog.log"
    $DateTime = "[{0:MM/dd/yy} {0:HH:mm:ss}]" -f (Get-Date)
    $LogMessage = "$Datetime $LogString"
    Add-content $LogFile -value $LogMessage 
}

Mkdir "$DriveLetter\Program Files\$MagnusName\Logs" -ErrorAction SilentlyContinue


$MagnusWarn = (Get-EventLog -LogName application -Source "backup-tool.exe" -EntryType Warning -After (Get-Date).AddDays(-$Days)| ?{$_.eventid -eq "51"} -ErrorAction SilentlyContinue) 
$MagnusError = (Get-EventLog -LogName application -Source "backup-tool.exe" -EntryType Error -After (Get-Date).AddDays(-$Days)| ?{$_.eventid -eq "51"} -ErrorAction SilentlyContinue)
$MagnusCatchall =  (Get-EventLog -LogName application -Source "backup-tool.exe" -After (Get-Date).AddDays(-$Days) -ErrorAction SilentlyContinue) 

if ($MagnusError) { 
writeErrorLog "Backup errors found"
Write "Backup errors found"
#YOUR RESPONSE CODE HERE
exit
}

else {
if ($MagnusWarn)
{
WriteWarnLog "Backup warnings found"
Write "Backup warnings found"
#YOUR RESPONSE CODE HERE
exit
}

if (!$MagnusCatchall)
{
WriteLog "No Magnus events found, perhaps not running or system was offline"
Write "No Magnus events found, perhaps not running or system was offline"
#YOUR RESPONSE CODE HERE
} 
} 
